apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_SDK_VERSION)
    defaultConfig {
//        applicationId "net.openmob.mobileimsdk.android"
        minSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 打jar时，有了下面这段就不提示lint问题
    lintOptions {
        abortOnError false
    }
}

//添加此段
protobuf {
    //配置protoc编译器
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    //这里配置生成目录，编译后会在build的目录下生成对应的java文件
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
            }
        }
    }
}
//指定原始.proto文件的位置
android {
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
            }
            proto {
                srcDirs 'src/main/proto'
            }
        }
    }
}

dependencies {
    api fileTree(includes: ['*.jar'], dir: 'libs')
    implementation "io.netty:netty-all:${NETTY_VERSION}"
    implementation "com.google.protobuf:protobuf-lite:${GOOGLE_PROTOBUF_LITE}"
    implementation 'com.android.support:support-annotations:28.0.0'

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.facebook.stetho:stetho-js-rhino:1.5.0'
}